<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clp.mapper.EmployeeMapper">

    <resultMap id="BaseResultMap" type="com.clp.pojo.Employee" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="gender" property="gender" jdbcType="CHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    </resultMap>
    <!--指定联合查询出的部门字段的封装-->
    <resultMap id="WithDeptResultMap" type="com.clp.pojo.Employee" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="gender" property="gender" jdbcType="CHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="dept_id" property="deptId" jdbcType="INTEGER" />
        <association property="department" javaType="com.clp.pojo.Department">
            <id column="dept_id" property="id"></id>
            <result column="dept_name" property="name"></result>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
    id, name, gender, email, dept_id
  </sql>

    <sql id="WithDept_Column_List">
    e.id, e.name, e.gender, e.email, e.dept_id, d.name 'dept_name'
  </sql>

    <!--查询员工带部门信息-->
    <select id="selectByExampleWithDept" resultMap="WithDeptResultMap" parameterType="com.clp.pojo.EmployeeExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="WithDept_Column_List" />
        from employee e
        left join department d
        on e.dept_id = d.id
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <!--根据主键查询部门信息-->
    <select id="selectByPrimaryKeyWithDept" resultMap="WithDeptResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="WithDept_Column_List" />
        from employee e
        left join department d
        on e.dept_id = d.id
        where e.id = #{id,jdbcType=INTEGER}
    </select>

    <!--查询员工不带部门信息-->
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.clp.pojo.EmployeeExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from employee
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.clp.pojo.EmployeeExample" >
        delete from employee
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.clp.pojo.Employee" >
    insert into employee (id, name, gender,
      email, dept_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
      #{email,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.clp.pojo.Employee" >
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="gender != null" >
                gender,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="deptId != null" >
                dept_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null" >
                #{gender,jdbcType=CHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null" >
                #{deptId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.clp.pojo.EmployeeExample" resultType="java.lang.Integer" >
        select count(*) from employee
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update employee
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null" >
                gender = #{record.gender,jdbcType=CHAR},
            </if>
            <if test="record.email != null" >
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.deptId != null" >
                dept_id = #{record.deptId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update employee
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=CHAR},
        email = #{record.email,jdbcType=VARCHAR},
        dept_id = #{record.deptId,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.clp.pojo.Employee" >
        update employee
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null" >
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null" >
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.clp.pojo.Employee" >
    update employee
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>